matt asay blogged the other day as did michael nygard on why enterprise software is so shockingly bad i could n't help but smile sadly , nod my head , and wipe a virtual tear from my cheek obviously not everything in the world of enterprise software is poorly done there are some exciting things going on out there , after all , but the fact is , you and i know exactly what people mean when they say that enterprise software sucks enterprise software is typically big , slow , and fugly , for starters the gui if there is one is often a usability disaster sometimes there are strange functionality holes , or things do n't work the way you 'd expect and of course , a lot of the time the software is just plain unstable and ends up detonating i 've worked in r d for two software companies , one large and one small both companies made java enterprise software , and rest assured , we shipped our share of chunkblowers in one case , we had created a sizable collection of connectors priced around k each designed to let our customers integrate with popular products from sap , jd edwards , lawson , peoplesoft , siebel , ibm , and others i took classroom training on some of the remote systems and i was mortified by how inferior the user facing pieces of some very expensive middleware products are , compared to the desktop software i use every day when i first arrived in the enterprise software world a wide eyed noob , it was a shock to the senses i noticed a number of things right off the bat data and in particular , data integrity matters more than anything else you can throw exceptions all day long just do n't lose any data getting the job done is top priority how you get it done does n't matter as much as getting it done if mission critical software somehow manages to do the job no matter how poorly , life goes on if not , the world comes to an end most user interfaces are designed by developers which is kind of like letting welders do plastic surgery usability testing if it happens at all happens near the end of the development cycle , after it 's too late customers , alas , do n't know any more about good ui design than you do they can only tell you what does n't work an easy installation experience is not perceived as having anything to do with solving business problems it 's orthogonal , hence it 's not a priority , hence software installation and setup tends to be a brutally punishing experience interoperability and standards friendly means putting everything in xml using your own inscrutable custom schema that no one else uses , then describing all of your one off proprietary interfaces in wsdl so you can tell your customers you have a web services api if your customers are n't finding the software easy to use , it 's because they did n't get enough training if the software is too slow , it 's because you need a bigger machine frequently heard phrases there 's a fixpack coming did you look in the logs ? you 're the first person to report this in a macro sense , enterprise software ends up being disappointing for two main reasons , i think first , the process surrounding enterprise software procurement and deployment is typically somewhat thick , involving large numbers of stakeholders and a fair amount of bureaucracy the more bureacracy there is , and the more people that get involved , the greater the likelihood of a failed exercise in groupthink a lot of really poor decisions get made by well meaning people working together in large committees bottom line a flawed procurement process leads to situations where all the checkboxes are checked yet no one is happy the second thing is , making a good software product is hard it requires extra effort and that means extra cost manufacturers do n't like extra costs so there 's a substantial built in incentive to turn out software that 's good enough and no better mcdonalds did n't get to be the most successful company in the fast food business the ibm of food , if you will by producing great food it 's important to be clear on that they produce food that 's good enough , and they do it at a price point that hits a sweet spot and they have a delivery mechanism that allows customers to consume the product the way they want to , such as in the car on the way to someplace else secret sauce has little to do with any of it i do think things are getting better enterprise software does n't suck as much as it did ten years ago or heaven forbid , twenty years ago the pace of change has certainly quickened iterations are faster competitive pressures are higher and customer expectations are rising it 's still pretty bad out there , though which is either a curse or an opportunity , depending on where you sit and how you want to look at it