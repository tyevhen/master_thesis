five lines of javascript suffice to rotate the image on the left degrees , at a processing speed of one million pixels per second rotating an image degrees turns out to be extremely easy and as good an illustration as any that javascript does n't automatically have to mean slow the test image shown here a x pixel jpeg was rotated degrees using the script below in only milliseconds quite literally the blink of an eye note that to use this script , you need the small java app imagemunger that i wrote about a few days ago w image getwidth h image getheight pixels image getrgb , , w , h , null , , w image setrgb , , w , h , pixels reverse , , w panel updatepanel the key to what 's going on is the call to pixels reverse when you call getrgb on a bufferedimage , java hands you back all the image 's pixels in a one dimensional array simply rewriting the array in reverse order has the effect of causing the image to paint lower right corner first if you know what i mean it rotates the image degrees the reverse method of the array object built into javascript is implemented in bytecode and runs at bytecode speed as is true of all native methods it means that the main loop the pixel reversal code runs at compiled code speed the real lesson here is that if you want your javascript code to run fast , you should take advantage , whenever you can , of native methods of the language those methods are nearly always implemented as hand optimized c or java as i discussed in an earlier post it 's free speed do n't let it go to waste