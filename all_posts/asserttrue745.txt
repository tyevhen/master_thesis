think you know javascript ? try the following quick quiz guess what each expression evaluates to answers given at the end math pi typeof nan typeof typeof undefined a null null typeof a null a b c a b a b c a b isnan null tostring null ab c match b w b this is n't a tutorial , so i'm not going to explain each answer individually if you missed any , i suggest while ! enlightenment meditate the answers false number string object false c for people who work with javascript more than occasionally , i would score as follows correct answers score knowledgeable expert savant master of the universe a few quick comments the answer to no is the same for javascript as for java or any other language that uses ieee floating point numbers , and it 's one reason why you should n't use floating point arithmetic in any serious application involving monetary values floating point addition is not associative neither is float multiplication there 's an interesting overview here no in an arithmetic expression involving multiplication , division , and or subtraction , if the expression contains one or more strings , the interpreter will try to cast the strings to numbers first if the arithmetic expression involves addition , however , all terms will be cast to strings no the evaluation order in javascript as in java and c is left to right , so what you 've got here is a , post incremented , plus b , not a plus pre incremented b no tostring takes a numeric argument optionally , of course an argument of means base , hence the returned string is a hex representation of , which is if you write tostring , you get a binary representation of the number , etc no is octal notation for decimal interestingly , though , the interpreter will treat in string form as base ten if you multiply it by one do n't feel bad if you did n't do well on this quiz , because almost every question was a trick question obviously , and let 's face it , trick questions suck by the same token , if you did well on a test that sucks , do n't pat yourself on the back too hard it just means you 're a little bit geekier than any human being probably should be