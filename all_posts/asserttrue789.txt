i submitted an enhancement request to the mozilla folks yesterday my request ? add an elvis operator to javascript if you program in groovy , you already know what i'm talking about , and it has nothing to do with impersonators or las vegas if you 're not familiar with the elvis operator , here 's the text of my enhancement request to mozilla an elvis operator similar to groovy 's which is also being considered for scala , and is in the vein of c 's null coalescence operator would add significant value to javascript by letting coders write safer scripts with very little added effort please see http groovy codehaus org operators operators elvisoperator f a for a description basically , elvis is a collapsed version of the java c ternary operator return user ? anonymous if user is null , use anonymous allows a function that 's supposed to return a string to always return a string and never return undefined or null function catb , c return b ? c ? calling cat with zero or one args still produces a safe return value caller need n't check for null or undefined function need n't contain arg sanity checks in short , the availability of an elvis operator makes sanity injection easy and will improve the robustness of scripts in the wild as people start to use it alas , brendan eich summarily dismissed my suggestion , saying that idiomatic js already uses for the same purposes , but admitting other 'falsy' values than null and undefined eich offered the following illustration function catb , c return b c to which i say yes , of course , that sort of kludgy thing works and people use it all the time but is it right ? while i can appreciate eich not wanting to junk up javascript with new operators , i think using the logical or operator in the foregoing hacky way does nothing to make code more readable or preserve 's original semantics , imho that 's the whole point of having a separate operator the semantics are unambiguous to a human being , which is what counts never mind the interpreter i'm not alone in this opinion see scala elvis discussion see also the discussion of null convenience operators for the fan oo language see also stephen colebourne 's excellent discussion of a proposed elvis syntax for null handling in java see also the c null coaslescence operator i respect brendan eich more than apple pie itself , but i think it 's significant that others have already considered his argument and found it wanting there 's still much to recommend elvis java could certainly benefit from it how many lines of sanity checking code have people written at the start of a method to to see if arguments are null ? more important how many lines of such code have not been written through sheer oversight , resulting in mayhem later ? let he who is without sin throw the first nullpointerexception while we 're at it , i think java could use a safe property accessor a la groovy thename user ? name gives null , not npe , if name is null colebourne has published data acquired at devoxx showing that better null handling is the no most requested feature by java programmers the actual whiteboard photo from the data gathering session is here warning large image when programmers beg for a simple syntax feature that makes the language safer and easier to read while eliminating tedious sanity checking boilerplate , why not put the feature into the language ? what justification could there be for not doing so ? who benefits by keeping a feature out of the language that would cut down on null pointer exceptions ? does javascript and java need elvis ? i'm convinced it does what do you think ? thank you thank you very much