adriaan bloem and i were chatting yesterday about hard coded limits and why they 're still so annoyingly prevalent in enterprise software one thing led to another and before long we were talking about the number of dom elements in a web page , and i started wondering how many dom elements does a web page typically contain , these days ? i decided to hack together a piece of javascript that would count dom elements but i decided doing a complete dom tree traversal recursive or not would be too slow and klutzy a thing to do in javascript i just wanted a quick estimate of the number of nodes i wanted something that would execute in , say , milliseconds give or take a blink so here 's the bitch ugly one liner i came up with it relies on ex xml extensions for ecmascript , ecma , hence requires an ecma compliant browser , which firefox is you can paste the following line of code into the firefox address bar and hit enter or make it into a bookmarklet javascript alertxmlnew xmlserializer serializetostringdocument documentelement length okay , that 's the ugly contest winner let 's parse it into something prettier var topnode document documentelement var serializer new xmlserializer var markup serializer serializetostringtopnode var thexml new xmlmarkup var allelements thexml var howmany allelements length alert howmany the code serializes the dom starting at the document element usually the html node of the current page , then feeds the resulting string into the xml constructor of ex we can use dot dot asterisk syntax to fetch a list of all descendent elements the length method and yes , in ex it is a method , not a property tells us how many elements are in the list i know , i know , the ex node tree is not a dom and the two do n't map one to one but still , this gives a pretty good first approximation of the number of elements in a web page , and it runs lightning fast since the real work the hard stuff happens in compiled c the code shown here obtains only xml elements , not attributes to get attributes , substitute for in the th line again , the document object model has a lot more different node types than just elements and attributes this is not a total node count although i do wish someone would post javascript code for that last night when i ran the code against the google home page english u s , i got an element count of and an attribute count of when i ran the code on the google news page , i got elements and attributes please post a comment below if you find web pages with huge numbers of nodes give stats and urls , please ! that 's all the time i had last night for playing around with this stuff just time to write a half dozen lousy lines of javascript maybe someone can post some variations on this theme using xpath ? maybe you know a slick way to do this with jquery ? leave a comment or a link i 'd love to see what you come up with