one of the great things about svg and the svg graphs you can produce on demand at zunzun is that , as a web standard , it supports dom and javascript , which means you can make svg graphs interactive i want to run through a quick example of what i'm talking about if you 're using an svg compliant browser that honors inline svg so , any browser except ie , you should see a graph below , and you should be able to mouse over any point on the graph and see a tooltip appear with the name of the organism that corresponds to the underlying data var captions borrelia burgdorferi , fusobacterium nucleatum , peanut witches broom phytoplasma , staphylococcus aureus , lactococcus lactis , tetragenococcus halophilus , lysinibacillus sphaericus , lactobacillus sakei , colwellia maris , bacillus subtilis , legionella pneumophila , pasteurella haemolytica , francisella tularensis , erysipelothrix rhusiopathiae , aggregatibacter actinomycetemcomitans , bacillus thermoglucosidasius , vibrio harveyi , methylovorus sp , brevibacillus choshinensis , rhizobium radiobacter , pseudomonas stutzeri , rhodopseudomonas sp , methanosarcina mazei , rhodobacter capsulatus , geobacillus stearothermophilus , myxococcus xanthus function show node var caption document getelementbyid mycaption var id node getattribute id var x node getattribute x var y node getattribute y caption setattribute x , x caption setattribute y , y caption textcontent captions id substring stroke linecap square stroke linejoin round mouse over a data point to see what it is hsp dnaj lysine and arginine content for species to make the graph show dynamically created tooltips , i produced a list of organisms from the raw data given here which in turn came from the search results shown here after capturing the names of the organisms in an array , i pasted the array , along with a few lines of javascript , into the top of my svg graph the graph i showed you how to generate in my earlier post about zunzun , inside the first defs element script type text ecmascript ! cdata var captions borrelia burgdorferi , fusobacterium nucleatum , peanut witches broom phytoplasma , staphylococcus aureus , lactococcus lactis , tetragenococcus halophilus , lysinibacillus sphaericus , lactobacillus sakei , colwellia maris , bacillus subtilis , legionella pneumophila , pasteurella haemolytica , francisella tularensis , erysipelothrix rhusiopathiae , aggregatibacter actinomycetemcomitans , bacillus thermoglucosidasius , vibrio harveyi , methylovorus sp , brevibacillus choshinensis , rhizobium radiobacter , pseudomonas stutzeri , rhodopseudomonas sp , methanosarcina mazei , rhodobacter capsulatus , geobacillus stearothermophilus , myxococcus xanthus function show node var caption document getelementbyid mycaption var id node getattribute id var x node getattribute x var y node getattribute y caption setattribute x , x caption setattribute y , y caption textcontent captions id substring script i also inserted the following markup before the big list of use elements containing all the data points ! dynamically changing text text id mycaption x y style fill ef font size text anchor left alignment baseline left mouse over a data point to see what it is text ! static label text text id staticlabel x y style fill font family arial font size hsp dnaj lysine and arginine content for species text the interactivity does n't happen without a couple more modifications one thing that 's critical is that every use element describing a data point must have its own id attribute , consisting of an underscore followed by a number the underscore is my own crude namespacing device you can name the id values differently , but you want to end up with numbers you can use to index into the organism array also each use element needs to have an onmouseover attribute with a bit of code in it every use element looks something like this use x xlink href circle y onmouseover javascript showthis id use by default , zunzun generates use elements that have an xlink href value of m i did a global search and replace , changing that value to something human readable , namely circle by now you 're probably wondering how i know for sure that my data point id values match up to the correct names in my organism array after all , that 's how the code works it examines the moused over element 's id value , then uses that value to index into the array and displays the array value as a tooltip at the moused over element 's x and y position it so happens that zunzun , when it generates an svg graph , spits out use elements data points in y sorted order , from high y values to low y values obviously , to make the tooltip trick work , i had to obtain my organism names in y sorted order as well how did i do that ? it 's actually pretty trivial , since i have the data that generated the graph i 'll leave it as an exercise for the reader , with this tip you need to create an association programmatically between your data points your x y values and the organism names , then sort against y values if you have data points , you can make custom objects , each with x , y , and name fields then make a custom comparator function , something like function comparea , b return a y b y then , if your custom data objects are in an array called data , invoke data sortcompare done