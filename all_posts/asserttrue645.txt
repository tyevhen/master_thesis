there 's been some interesting discussion recently of what 's wrong with jetpack by laurent jouanneau , daniel glazman , and others see the long comment thread at the end of daniel 's recent post the criticisms tend to fall along two major axes mozilla jetpack claims to be a kinder , gentler , easier to learn replacement technology for making firefox extensions replacing the existing quirky hodgepodge of xul xbl xhtml technologies , but it abandons xul totally , which means that extension programmers ca n't transfer their current xul skills to the jetpack dev world , and more important jetpack loses the sophisticated layout model of xul in its place we have plain old html and css the jetpack api is bound too closely to the jquery api with its closure intensive syntax , its peculiar self obfuscating ' ' notation , and overreliance on method overloading one of jetpack 's goals is to democratize firefox extension programming , liberating it from the hands of the xul programming elite and bringing ff extension programming into the purview of mere mortals who speak html and javascript but it stops short of that goal in point of fact , jetpack encourages magic code closure ridden one liners and such and expects a fair amount of clairvoyance from programmers when it comes to required imports and other notions for example , the winning code entry in a recent jetpack coding competition is all but unreadable i e , it 's self obfuscating , with lines like let window cc mozilla org appshell window mediator getserviceci nsiwindowmediator getmostrecentwindow navigator browser any api that encourages this kind of code gets a thumbs down from me , and frankly , at this point , i would probably have to agree with daniel glazman when he says that jetpack totally misses its main goal of making extension authoring dead simple instead of recreating another programming elite wedding itself to jquery was one of the worst design choices jetpack 's api experts could have made , imho clever syntax does n't advance an api 's cause , any more than secret handshakes advance diplomacy 's cause there are other criticisms , having to do with things like overuse of imports , wrappedjsobject , lack of localization support , lack of ability to use offline resources , and some odd constructs like jetpack tabs focused raw but except perhaps for localization , those are not showstoppers a syntax that encourages brevity over clarity and coolness over maintainability , on the other hand , is definitely a problem it seems to me we 're either going to democratize firefox extension creation or not if we are , let 's get rid of the secret handshakes and go back to kiss as a design principle