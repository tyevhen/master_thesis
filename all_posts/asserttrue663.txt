lena a standard test image in the graphics programming world is transformed by the perlin gain function with b , b , and b , respectively left to right coaxing more contrast out of an image is a kind of exercise in weak signal detection you 're trying to make information more obvious in the presence of noise in practice , it comes down to making light tones lighter and dark ones darker but you have to do it carefully , in such a way as not to force too many preferably no dark tones into total blackness nor too many light tones into total whiteness a very useful approach is to adapt ken perlin 's gain function to the remapping of pixel values in javascript , the function looks like this var log pointfive function gain a , b var p math log b log pointfive if a return if a return if a return math pow a , p return math pow a , p the perlin gain function maps the unit interval i e , real numbers from to , inclusive onto itself in such a way that a control value of maps to unchanged , whereas a control parameter value of say maps the number to itself but maps all other values in the unit interval to new values , as shown in the figures below in each graph , the x and y axes go from zero to in the function shown above , the control parameter the formal parameter that throttles the function is b the input value that will be mapped to a different output is a if b is , then the output of the function will always be a no matter what value of a you pass in but if b is , and a is say , the function will return , whereas if b is and a is , the output will be in one case , a got bigger , and in the other case it got smaller the function has the effect of making bigger values bigger and smaller values smaller when b it has the effect of making bigger values smaller and smaller values bigger when b gain gain gain this turns out to be a great function for changing the contrast of an image all you have to do is re map pixel values onto the interval using the function , with a value for b of something greater than if you want the image to have more contrast , or less than if you want the image to have less contrast it turns out java awt image has a built in class called lookupop that implements a lookup operation from a source color table to an output color , which makes it easy to implement extremely high performance contrast adjustment via the gain function the red , green , and blue values in an rgb image span the interval zero to all we need to do is create a byte array of length , containing those values , then modify the table by passing each value through the gain function the altered table can be used to create a lookupop instance , and then you just need to call filter on the instance , passing it an input image and an output holder image i do all this in javascript in the code listing below to run this script against an image of your choice , you simply need the open source imagemunger app that i wrote about a couple days ago contrast js kas thomas jan public domain http asserttrue blogspot com use values but for less contrast contrast adjust to taste ! awtimage java awt image return a java awt image bytelookuptable function getlut amt var log pointfive function gain a , b var p math log b log pointfive if a return if a return if a return math pow a , p return math pow a , p perlin 's gain function per k perlin , an image synthesizer , computer graphics , v , n , p we are going to construct a table of values , , wherein the values vary nonlinearly according to the formula in gain , as throttled by the parameter 'amt' var tablesize var javaarray java lang reflect array var bytes javaarray newinstance java lang byte type , tablesize var lut new awtimage bytelookuptable , bytes for var i , gainvalue i tablesize i gainvalue gaini , amt var bytevalue gainvalue if bytevalue bytevalue bytevalue bytes i bytevalue return lut create the lookup table lut getlut contrast create the java awt image lookupop lop new awtimage lookupop lut , null clone the source image src theimage clone new awtimage bufferedimage src getwidth , src getheight , src gettype gd clone getgraphics gd drawimage src , , , null apply the contrast lop filter clone , src refresh the screen panel updatepanel thepanel repaint there are a couple of things to note first , you ca n't assume that an array created in javascript can be used as an array in a java context , because java is type fussy and javascript is n't , so instead , to create a java array in javascript you have to do var bytes javaarray newinstance java lang byte type , tablesize this creates a java byte array and stores a reference to it in javascript but now you have another problem , which is that you ca n't just map values from onto a length java byte array , because in java , the byte type cannot accommodate values greater than in other words , byte is a signed bit type , and you 'll get an error if you try to store a value of in a byte variable so to initialize the length byte array with values from zero to xff , and still keep the java compiler happy , we have to resort to a bit of twos complement legerdemain if bytevalue bytevalue bytevalue to test the contrast js script , i ran it against the lena image with values for b in the gain function of which leaves the image unchanged , which reduces contrast , and which increases contrast you can see the results at the top of this post the code executes very quickly because it 's all a table lookup done in java the javascript part simply initializes a very small table projects for the future add a ui to the program to allow contrast to be adjusted in real time with a slider when contrast is increased in a color image , hot parts of the image appear to get hotter and cold parts appear to get colder write a modification of the contrast code that compensates for apparent temperature changes in the code as currently written , inaccuracies due to rounding errors are ignored rewrite the routine to transform the image to a bit color space , and use a k color lookup table rather than a byte table , for the contrast adjustment then transform the image back to its original color space afterwards