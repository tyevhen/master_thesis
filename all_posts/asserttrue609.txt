after yesterday 's exercise comparing the execution speed of rhino standalone versus rhino embedded in jre , i decided to carry out a couple more performance investigations i was curious to find out , first of all , how much slower rhino a pure java implementation of javascript would be than , say , spidermonkey the c implementation in firefox i repeated the numerical efficiency test from yesterday euler 's expansion series for pi and got the following results execution time not speed , but time higher values are worse is plotted vertically the surprising result ? firefox 's c interpreter is not all that much faster than standalone rhino the y axis here goes from zero to milliseconds trials , on the x axis , run from zero to values of , , , , and for the terms argument to yesterday 's pi function so in other words , it took rhino milliseconds to calculate pi from a million terms , whereas it took firefox spidermonkey ms to do the same thing , making firefox 's interpreter about faster rhino comes out looking quite good , considering it is , after all , only java a more shocking comparison emerged when i tested rhino against acrobat as you may know , adobe acrobat comes with a javascript engine , presumably written in c i expected it to blow the doors off rhino not so ! here are the results astonishingly , acrobat 's interpreter was a full order of magnitude slower than rhino , requiring milliseconds to calculate pi from a million terms versus ms for rhino why so slow ? i have no idea perhaps someone from adobe can comment bottom line do n't assume that because something is written in java , it 's automatically slow it depends on the runtime environment and what it is , exactly , you 're trying to do after this , my respect for rhino only rises and it was high to begin with