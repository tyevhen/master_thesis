the graphs you get from zunzun com the free graphing service are pretty neat , but one shortcoming of zunzun is that it wo n't generate histograms google charts will do histograms , but unlike zunzun , google wo n't give you svg output the answer ? convert a zunzun graph to histograms yourself it 's only svg , after all it 's xml it 's text you just need to edit it of course , nobody wants to hand edit a zillion use elements to convert data points to histogram rects it makes more sense to do the job programmatically , with a little javascript in my case , i had a graph of dinucleotide frequencies for clostridium botulinum coding regions what that means is , i tallied the frequency of occurrence in every protein coding gene of ' cpg ' , cpc , cpa , cpt , apg , apa , apc , and all other dinucleotide combinations in all since i already knew the frequency of g by itself , a , c , and t , it was an easy matter to calculate the expected frequency of occurrence of each dinucleotide pair for example , a occurs with frequency , whereas g occurs with frequency therefore the expected frequency of occurrence of the sequence ag is times , or bottom line , i had expected frequencies and actual frequencies , for dinucleotide combos i wanted side by side histograms of the frequencies first , i went to zunzun and entered my raw data in the zunzun form just so you know , this is what the raw data looked like i made zunzun graph the data , and it gave me back a graph that looked like this which is fine except it 's not a histogram plot and it has goofy numbers on the x axis i clicked the svg link under the graph and saved an svg copy to my local drive , then opened the file in wordpad the first thing i did was locate my data points that 's easy zunzun plots points as a series of use elements the elements are nested under a g element that looks like this g clip path url pcffd i hand edited this element to have an id attribute with value data g id data clip path url pcffd next , i scrolled up to the very top of the file and found the first defs tag under it , i placed the following empty code block script type text ecmascript ! cdata code goes here script then i went to work writing code to go inside the above block that would find the use elements , get their x , y values , and create rect elements of a height that would extend to the x axis line the code i came up with looks like this what is the svg y value of the x axis ? attempt to discover by introspecting clippath function findgraphverticalextent var cp document getelementsbytagname'clippath' var rect cp childnodes var top rect getattribute'y' var bottom rect getattribute'height' return top bottom this is for use with svg graphs produced by zunzun , in which data points are described in a series of use elements we need to get the list of use nodes , convert it to a js array , sort data points by x value , and replace use with rect elements function changetohistograms var graph vertical extent findgraphverticalextent the 'g' element that encloses the 'use' elements needs to have an id of data for this to work ! manually edit the g node 's id first ! var data document getelementbyid data note the following line gets a nodelist object , which is not the same as a javascript array ! var nodes data getelementsbytagname use utility routine an inner method function nodelisttojavascriptarray nodes var results for var i i nodes length i results push nodes i return results utility routine another inner method function comparex a , b return a getattribute x b getattribute x var use nodelisttojavascriptarray nodes we want the nodes in x sorted order use sort comparex presto , done main loop for var i i use length i var rect document createelementns http www w org svg , rect var item use i var x item getattribute x var y item getattribute y var rectwidth var rectheight graph vertical extent y rect setattribute width , rectwidth tostring rect setattribute height , rectheight tostring rect setattribute x , x tostring rect setattribute y , y tostring we will alternate colors , pink purple rect setattribute style , i ? fill ce stroke none fill dd stroke none data appendchild rect add a new rect item remove delete the old use element return use as so often happens , i ended up writing more code than i thought it would take the above code works fine for converting data points to histogram bars as long as you remember to give that g element the id attribute of data as mentioned earlier but you need to trigger the code somehow answer insert onload changetohistograms in the svg element at the very top of the file but i was n't done , because i also wanted to apply data labels to the histogram bars labels like cg , ag , cc , etc and get rid of the goofy numbers on the x axis this is the function i came up with to apply the labels function applylabels sortednodes var labels aa , ag , at , ac , ga , gg , gt , gc , ta , tg , tt , tc , ca , cg , ct , cc var data document getelementbyid data var labelindex for var i i sortednodes length i var text document createelementns http www w org svg , text var node sortednodes i text setattribute x , string node getattribute x text setattribute y , string node getattribute y text setattribute style , font size pt text textcontent labels labelindex touppercase text setattribute id , label labelindex data appendchild text and here 's a utility function that can strip numbers off the x axis optional call this to remove zunzun graph labels pass , , , , , , , , to remove x axis labels function removezunzunlabels indexes for var i i indexes length i try document getelementbyid text indexes i remove catche console log index i not found skipped btw , if you 're wondering why i multiply so many things by one , it 's because the attribute values that comprise x and y values in svg are string objects if you add them , you 're concatenating strings , which is not what you want to convert a number in string form to an actual javascript number so you can add numbers and not concatenate strings , you can either multiply by one or explicitly coerce a string to a number by doing number x the final result of all this looks like final graph after surgery expected pink and actual purple frequencies of occurrence of various dinucleotide sequences in c botulinum coding region dna which is approximately what i wanted to see the labels could be positioned better , but you get the idea what does the graph show ? well first of all , you have to realize that the dna of c botulinum is extremely rich in adenine and thymine a and t those two bases constitute of the dna therefore it 's absolutely no surprise that the highest bars are those that contain a and or t what 's perhaps interesting is that the most abundant base a , which should form 'aa' sequences at a high rate , does n't compare the first bar on the left to the shorter purple bar beside it this is especially surprising when you consider that aaa , gaa , and aat are by far the most used codons in c botulinum in other words , 'aa' occurs a lot , in codons but even so , it does n't occur as much as one would expect it 's also interesting to compare gc with cg non biologists , note that these two pairs are not equivalent , because dna has a built in reading direction the notation gc , or equivalently , gpc , means there 's a guanine sitting on the ' side of cytosine the notation cg means there 's a guanine on the ' side of cytosine the ' and ' numbers refer to deoxyribose carbon positions the gc combo occurs more often than predicted by chance whereas the combination cg or cpg , as it 's also written occurs much less frequently than predicted by chance the reasons for this are fairly technical suffice it to say , it 's a good prima facie indicator that c botulinum dna is heavily methylated which in fact it is