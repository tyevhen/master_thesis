this is a handy tip for anyone who might be wondering if there 's an easy way a restful way to push hierarchical data into a java content repository , making use of json the good news there is , indeed , an easy way to accomplish this the key is to use the operation selector set to a value of import , in conjunction with the contenttype selector set to a value of json let 's take a simple example suppose you have a json object that looks like 'jcr primarytype' 'nt unstructured' , 'propone' 'proponevalue' , 'childone' 'childpropone' true you want this data to show up under content in the repository tree , with a node of type nt unstructured you would simply create a form element in your html page and set it up like this form method post action content enctype multipart form data input type hidden name operation value import input type hidden name contenttype value json input type hidden name namehint value sample input type text name content value 'jcr primarytype' 'nt unstructured' , 'propone' 'proponevalue' , 'childone' 'childpropone' true input type submit form once the user clicks submit , the json data gets pushed into the repository exaxtly where and how you want it other tips for pushing data to a java content repository can be found here if you want to play with this using adobe 's crx repository otherwise known as the experience server product , you can download a copy of it , along with a free developer license , right here crx is the foundational piece of repository infrastructure underlying adobe cq and other adobe enterprise products it 's a jcr compliant repository based on apache sling with a lot of great administrative tools and other uis including a built in ide included , ready to use installation is as simple as double clicking the single downloadable jar give crx a try it 's about as straightforward and easy to use as an enterprise grade content repository gets