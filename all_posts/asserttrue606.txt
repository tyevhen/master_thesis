one of the most difficult aspects of learning to write openoffice macros in javascript is that there is so little example code available openoffice comes with dozens of useful code examples written in openoffice basic , but for beanshell , python , and javascript the other supported macro languages there 's hardly anything beyond that , there 's only the inscrutable page developer 's guide no longer available in pdf , which is inscrutable not so much because it is not well written it is , in fact , quite well written but because the byzantine openoffice c and java apis are themselves so impenetrable if you 've ever tried to write an oo o macro in anger , you know what i'm talking about the whole experience is exhausting so without further whining , i thought i 'd present the most quintessential of oo o code examples , showing how to parse an oo o spreadsheet with javascript i do n't claim that the code is particularly stellar only that it works that 's the main thing , right ? the following code will parse through a spreadsheet and display data from the desired numbers of rows and columns in a swing jeditorpane when a spreadsheet is open in oo o , this macro will loop over a given number of rows and columns and summarize those cells in a jeditorpane copyleft by kas thomas http asserttrue blogspot com importclasspackages com sun star uno unoruntime importclasspackages com sun star sheet xspreadsheetdocument go thru the sheet one row at a time and collect cell data into an array of records , where each record is an array of cell data for a given row function harvestcells sheet , rows , columns var masterarray for var i i rows i var ar for var k k columns k var cell sheet getobject getcellbyposition k , i var content cell getformula if content indexof , ! ar push content else ar push content masterarray push ar return masterarray harvestcells a swing ui for displaying the data function editorpane swing packages javax swing this pane new swing jeditorpane text html , this jframe new swing jframe this jframe setbounds , , , var editorscrollpane new swing jscrollpanethis pane editorscrollpane setverticalscrollbarpolicy swing jscrollpane vertical scrollbar always editorscrollpane setpreferredsizenew java awt dimension , editorscrollpane setminimumsizenew java awt dimension , this jframe setvisible true this jframe getcontentpane add editorscrollpane public methods this getpane function return this pane this getjframe function return this jframe function main get the document object from the scripting context odoc xscriptcontext getdocument get the xspreadsheetdocument interface from the document xsdoc unoruntime queryinterfacexspreadsheetdocument , odoc get a reference to the sheets for this doc var sheets xsdoc getsheets get sheet var sheet sheets getbyname sheet construct a new editorpane var editor new editorpane var pane editor getpane harvest cell data from sheet , rows , cols var masterarray harvestcells sheet , , display the data var text masterarray join n pane settext text the main method comes last , so it may help to read the code from the bottom up first , we get a reference to the current document with odoc xscriptcontext getdocument a standard oo o idiom , then we use that to get a reference to the xspreadsheetdocument i should caution that there is no error checking code here it 's assumed that a spreadsheet document is already open and frontmost in openoffice once you 've got the xspreadsheetdocument , you can peel through its sheets with a sheet , you can do var cell sheet getobject getcellbyposition k , i to get cell data for the cell at column k , row i if the spreadsheet is a converted csv doc , the cells will all have text data , and here 's the weird part to get the data you have to do var content cell getformula since getvalue will only work if the cell contains a double precision floating point number to test this macro , i looked online for a sizable csv file that i could play with i found a free open movie database at george tech 's website it 's a comma delimited file with data for movies ranging from to the early s it 's by no means a definitive movie listing apparently it represents one of the school 's collections but it suits my purposes just fine when i run the macro , it takes less than a second to display all of the spreadsheet 's cell data for all x cells in a jeditorpane window ideas for further exploration style the data in some interesting way save the data as html push the data into a sling repository blog coming