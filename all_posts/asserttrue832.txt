there 's a truly fascinating interview with ruby lisp scheme c programmer and onetime adware creator matt knox over at http philosecurity org anybody who has always wondered how adware works , and why it 's so infuriatingly difficult to get rid of , needs to read that interview it so happens , i recently spent several hours ridding my son 's machine of a particularly nasty adware furball i was able to eradicate most of it , but there were some peculiar registry entries i could n't get rid of no matter how i tried immutable registry entries now i know why such entries can exist matt knox explains how , in his days working for direct revenue the firm eliot spitzer sued a couple years ago , for ahem propagating trojans , he created unwritable registry keys by exploiting a little known difference between the win api and the nt api windows , ever since xp , is fundamentally built on top of the nt kernel , matt knox explains nt is fundamentally a unicode system , so all the strings internally are bit unicode the win api is fundamentally ascii there are strings that you can express in bit counted unicode that you can t express in ascii um , yeah a unicode string can contain bit values in which the top bits are zeros in c , strings are null terminated , so a unicode string containing what appear to be null bytes might appear truncated to a process that was not expecting unicode matt continues that meant that we could , for instance , write a registry key that had a null in the middle of it since the user interface is based on the win api , people would be able to see the key , but they wouldn t be able to interact with it because when they asked for the key by name , they would be asking for the null terminated one this is just one example cited by knox of the countless microsoft design weirdnesses that have led to the tragic security mess that is windows this sort of thing is why the spybot database now contains almost a half a million entries , and also why norton security updates and windows updates will soon be eating percent of available cpu cycles from machines connected to the internet and if you read between the lines of matt knox 's interview , you 'll understand that the mischief is really only just beginning take my advice read the interview it 's an eye opener