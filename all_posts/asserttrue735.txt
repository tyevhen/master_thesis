one of the things that 's always annoyed me about web app development is how klutzy it is to try to persist data locally offline , say from a script running in the browser the cookie mechanism is just so , so annoying but it turns out , help is on the way actually , firefox has had a useful persistence mechanism something more useful than cookies , at least since firefox , in the so called dom storage api internet explorer prior to version also had a a similar feature called userdata behavior that allows you to persist data across multiple browser sessions but it looks like the whole browser world even google chrome will eventually move to the dom storage api , if for no other reason than it is getting official wc blessing the spec in question is definitely a work in progress , although the key value pair implementation has as i say been a part of firefox and spidermonkey for quite some time the part that 's still being worked out is the structured storage part the part where you can use some flavor of sql to solve your crud and query needs in a businesslike manner why do we need a wc structured storage dom api when there are already such things as gears localserver , dojo offlinerest , etc not to mention the html applicationcache mechanism ? a good answer is given here by nikunj r mehta , who heads up oracle 's related bitsy project most of the current debate around how structured storage should be handled in the dom storage api revolves around whether or not to use sqlite or sql at all the effort is presently heading toward sqlite , but vladimir vuki evi has done an eloquent job of presenting the downsides to that approach the argument against sql is that ajax programmers should n't have to be bothered to learn and use something as heavy and obtuse as sql just to do persistence , when there are more script friendly ways to do things using an approach something like that of , say , couchdb as much as i tend to sympathize with that argument , i think the right thing to do is stay with industry standards around structured data storage , and sql is a pretty universal standard of course , then people will argue that sql is n't just one thing , there are many dialects , etc which is true , and a good example is sqlite , which the current dom storage effort is centering on i happen to agree with vladimir vuki evi and others who say that sqlite is just too limiting and quirky a dialect to be using in this situation i bring all this up not to argue for a particular solution , however , so much as to just make you aware of some of what 's going on , and the current status of things explore the foregoing links if you want to get involved if having a common data persistence and offline online http cache api that will work uniformly across browsers means anything to you , maybe you should join the discussion or at least monitor it getting beyond cookies is essential at this point the future of web app development is at stake and we ca n't wait any longer to nail this one we also ca n't do goofy things like rely on hidden flash applets to do our heavy lifting for us it 's time to have a real , standardized , browser native set of persistence and caching apis there 's not a moment to lose