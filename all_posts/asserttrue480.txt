yesterday i talked about teaching yourself programming i said it 's something anybody who understands if then can do you do n't have to be a math whiz or a major bigtime geek to learn to read and write code i also said that today i 'd present a first programming lesson so let 's get started a what does this mean to you ? if you 're not already a programmer , it probably means a equals one but in the wonderful world of javascript , that 's not what it means it means assign the numeric value of to a and from this point forward , treat any appearance of 'a' as if it were in javascript and java and c , is the assignment operator it does n't mean equals how then can you say equals ? consider this a this is a perfectly legal syntactically correct javascript statement legal but useless it means a equals one it 's a useless statement in that it does nothing to 'a' and changes nothing in the state of the computer it 's the programming equivalent of neon gas inert when would you want to use a ? consider this statement if a dowhatever notice that the top line is not a statement by itself the semicolon comes at the end of the second line therefore the whole statement reads if the value of a is equal to , execute the function named dowhatever a function is just what you think it is a named collection of statements that occurs elsewhere if a is n't equal to one , just skip the dowhatever and do nothing make sense so far ? good in that case , it 's time for a pop quiz what 's wrong with the following piece of code ? if a dowhatever technically , there is nothing wrong with the syntax of this statement it will execute without error but it 's not a good piece of code why ? consider what it says it says give the variable a the value , and if that value is true , execute the function dowhatever in other words , a sets a to one whether that 's what you intended or not the if asks whether the value one is true , which it is , in the world of code seemingly useless fact in the land of javascript , any non zero non null value will always be considered true thus the top line of this statement will always be true and dowhatever will always be called you might as well leave out the top line and just call dowhatever except , that 's probably not what you wanted to do , because if it was , you would have written the code that way to begin with if that made any kind of sense , congratulate yourself you 've done your first bit of debugging was any of it hard ? was any of it rocket surgery ? let 's recap here 's what you learned a piece of code contains statements a statement ends with a semicolon you can have variables with names like 'a' the equals sign is actually an assignment operator but two equals signs in a row means equals the if keyword does what you think it does in javascript , a non zero value is treated as true in the context of an if there are things called functions , which are basically just named collections of statements code can be buggy without containing illegal syntax ! it can be syntactically correct , yet logically flawed and the flaw can be hard to spot that 's a huge amount to learn in one lesson but it really was n't that hard , right ? i hope this lesson gives you encouragement to continue on where should you go from here ? i recommend that you start by reading more about javascript 's data types then perhaps check out http www codecademy com learn for free structured online courses on your choice of ruby , javascript , or python if it starts to sound tedious , remember there 's a lot of rote and tedium in the early stages of learning any language whether it 's french , hebrew , ruby , javascript , etc , and you 're bound to start to feel like you 're doing a lot of wax on , wax off , at some point but also remember like the karate kid , you 'll eventually break through and yes , the payoff is worth it