i admit to a certain laziness when it comes to rich text editing i like the ck editor formerly known as fck , and in fact i 'll often just go to the ck editor demo page to do impromptu rich text editing online , then eventually i 'll cut and paste the source from the demo editor into whatever final target blog , wiki page , etc i'm writing for oftentimes without saving the text anywhere else along the way it 's a bit of a dangerous practice not doing regular saves and i 've been known to close the ck editor window prematurely , before saving my work , resulting in an unrecoverable footinmoutherror the problem is , the ck editor demo page does n't give you a way to save your work it is after all just a demo page i decided the smart thing to do would be to put a save button on the page and have my work get sent off to my local sling repository at the click of a mouse yes yes , i could use something like zoho writer and be done with it , but i really do prefer ck editor , and i like the idea of persisting my rich text locally , on my local instance of sling so i went ahead and implemented sling persistence for the ck editor demo page i could have done the requisite code trickery with greasemonkey , but mozilla jetpack allows me to easily put a save to repository menu command on the browser window context menu in firefox and have that menu command show up only on the ck editor demo page and nowhere else like this note the menu command at the bottom the repository , in this case , is apache sling i'm actually using day crx content repository extreme , which is a highly spiffed commercial version of apache sling for which there is a free developer 's edition download the free version here i use the day implementation for a couple of reasons , the most compelling of which aside from its freeness is that crx comes with excellent administration tools , including a visual repository browser that sling sorely lacks powering the save to repository menu command is the following mozilla jetpack script scroll sideways to see lines that do n't wrap sling jetpack js copyright left kas thomas code may be freely reused with attribution jetpack future import menu jetpack menu context page beforeshow function menu , context var menucommand save to repository var frontwindow jetpack tabs focused contentwindow var fred http ckeditor com demo do n't slurp the content into memory if we do n't have to if jetpack tabs focused contentwindow location href indexoffred return function savetorepository repository storage url var base url http localhost content get the content we want to post var params content getcontent prompt the user to give it a name var name frontwindow prompt name for this entry if ! name name length throw no name provided get a reference to the front window var thewindow jetpack tabs focused contentwindow appending to the full url tells sling to create a new node var url base url name prepare for ajax post http new xmlhttprequest http open post , url , true send the proper header information along with the request http setrequestheader content type , application x www form urlencoded http setrequestheader content length , params length http setrequestheader connection , close show whether we succeeded http onreadystatechange function ifhttp readystate thewindow alert http status http status do the ajax post http sendparams function getcontent var doc jetpack tabs focused contentdocument var iframedoc doc getelementsbytagname iframe contentdocument return iframedoc body innerhtml manage menu menu remove menucommand menu add label menucommand , command savetorepository a couple of quick comments i use the jetpack menu context page beforeshow method in order to test if the frontmost current , focused browser tab is in fact the ck editor demo page , because there is no need to show the menu command if we 're not on that page if we 're not on that page , the script bails otherwise , at the bottom , we call menu add note that menu add is preceded by a call to menu remove which fails harmlessly silently if there 's nothing to remove the call to remove is needed because otherwise the script will add a new copy of the menu command every time the mouse is right clicked , and pretty soon there will be multiple copies of it appended to the bottom of the context menu we do n't want that slurping content from the ck editor demo page is pretty easy the editor window is in an iframe , and it 's the only iframe on the page , so all we have to do is get the innerhtml of the body of that iframe , and that 's what the getcontent method accomplishes function getcontent var doc jetpack tabs focused contentdocument var iframedoc doc getelementsbytagname iframe contentdocument return iframedoc body innerhtml the rest is pretty much straight ajax we do a post to the repository on the base url plus the user supplied name of the post , appended with to tell the sling servlet to create a new node in the tree at that spot so for example , if the repository is at http localhost and you want a new node named mynode under parent , you simply do a post to http localhost parent mynode and sling dutifully creates the new node thusly named and that 's basically it a ck editor sling integration in lines of code , thanks to mozilla jetpack