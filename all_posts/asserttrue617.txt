you 'd think would n't you ? that it would be easy to change the native printing size of a pdf document from a to u s letter , or vice versa i'm not talking about simply printing the document out with shrink to printable area enabled in the scaling part of the print dialog there are several problems with this i'm talking about actually changing the native format of the document itself from a to letter or vice versa i'm talking about changing the actual page size it turns out there is no easy way to do this in acrobat professional at first , i thought i could use the crop dialog to resize the pages of my a document , growing the margins by points on the left and right sides to make the page inches wide and shrinking the page by or points at top and bottom to make the page inches tall but to do it , you need to enter a negative margin size for left and right margins acrobat wo n't let you do that the trouble with shrink to printable area , incidentally , is that it simply downsizes the a page by about retaining the a aspect ratio , pinning the pages to the top of the print area , which causes the page to have a large amount of white space at the bottom in other words , the page is no longer centered vertically call me fussy , but this wo n't do i want the page centered , to my liking , on a letter size area , with no downsizing at all the a document in question already has plenty of margin space it does n't need more the pages simply need to be cropped and centered javascript to the rescue it turns out acrobat professional 's javascript api exposes a couple of helpful methods that allow me to do just what i need to do the getpagebox method will tell you what the native size of the doc 's pages is , in points or is it picas ? it turns out an a page is tall by wide a letter sized page is by the method that gets the job done is called setpageboxes for consistency , it should probably have been named setpagebox , but adobe decided setpageboxes was more descriptive either that or someone just wanted to be perverse in any event , setpageboxes has four parameters the first is the box type value a string , which is one of crop , media , art , bleed , or trim the second parameter is the zero based page number at which to start cropping the third param is the ending page number the final parameter is an array of four numbers representing the new left , right , bottom , and top coordinates of the final cropped page , in rotated user space the magic lines of code that worked for me are as follows var rect , , , this setpageboxes crop , , , rect i typed those lines in the javascript console in acrobat professional , highlighted them with the mouse , and clicked control enter to execute the code very quickly , acrobat cropped all pages of my a document i played around a little to get the top and bottom margins where i wanted them because the doc 's original margins are a little too generous at the top and too skimpy at the bottom of the page note , however , that rect minus rect equals and rect minus rect equals , which means the final page size is by recall that there are points in an inch note , by the way , that you can use negative numbers in the rect array this means you can expand a page on the lefthand side , using javascript , whereas as i mentioned earlier you cannot do this in acrobat 's crop ui , where negative numbers are not allowed very very handy so there you have it if ever you need to resize an a document to letter size or vice versa , now you know how you just need a copy of acrobat professional