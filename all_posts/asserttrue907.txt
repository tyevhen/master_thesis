by now everyone has heard the news that adobe will donate code for its actionscript vm to the mozilla foundation for use in firefox for a quick snapshot of what 's going on , see tamarin project page mozilla foundation press release executive summary and analysis by frank hecker of the mozilla foundation benchmark comparisons of tamarin versus javascript performance awesome graph a lot of the blog commentary around this has centered on flash imho this has little to do with flash it has everything to do with ecma js see my blog entry previous to this one and the future of ajax it will also keep adobe honest in terms of making sure actionscript does n't continue on the path of becoming its own bastard variant of javascript a la jscript , which is to say a not quite compliant dialect of ecma the ability to run jit compiled javascript on a vm is killer , because it knocks down all complaints of js being slow and it also opens the door to ultra fast js on the server and pure js doublesided ajax the vm architecture looks like this but again , it 's not really about swf , it 's about compiling js into bytecode , which is an incredibly important advancement brendan eich held an irc chat yesterday in which he and kevin lynch of adobe fielded questions about tamarin a few interesting factoids came to light acrobat 's js engine will move from spidermonkey to tamarin the expansion factor for jitting bytecode to x is roughtly from x for strongly typed , early bindable code , to x for loosly typed , unbindable code thus , you pay a price in memory hunger for the ability to jit compile js , but js 's new typing system mitigates it somewhat the tamarin codebase comprises , lines of c smaller than i would have thought this is sure to grow but brendan eich indicated very strongly that firefox needs to shrink , not grow , hence there will be pressure to keep tamarin as lean and efficient as possible tamarin is not bit ready but if the project gets the kind of huge traction that it appears it will get in the community , the bit flash question may finally get solved and maybe es js will get a long data type in addition to int uint double