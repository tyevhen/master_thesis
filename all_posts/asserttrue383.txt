update mar sadly , it appears zunzun com has gone away which is too bad it was the greatest graphic site ever being able to create high quality graphs of data for free at zunzun com is great , but to me , what really makes zunzun a great service is the fact that it will give you a graph in svg format svg is super powerful and super flexible , and it 's all just markup xml , which means you do n't need to own illustrator or photoshop in order to customize it you just need wordpad , notepad , or any old text editor and believe me , you can do some pretty fantastic things in svg with nothing more than wordpad as an editing tool in a previous post , i showed three graphs of amino acid content from the hsp heat shock proteins of three diverse groups of organisms because the graphs are svg , i can combine them into a single graph very easily in wordpad with no need to haul out photoshop or illustrator that 's what i did here note the following inline svg image will not be visible in ie try a web standards compliant browser stroke linecap square stroke linejoin round arthropods prokaryotes plants obviously , before you combine two or more graphs , you should be certain the axis scales are identical in the graphs zunzun will let you constrain x and y axis bounds once you have two zunzun graphs in svg format , all you need to do is copy the data points from one graph and paste them into the other using wordpad the points will be in a big long list of use elements , each containing the mysterious notation xlink href m the latter is a back reference an xlink reference to a previously defined graphic element having an id attribute with value m you 'll find the element in question in a defs block near the beginning of the file find that reference and do a global search and replace on m , replacing it with something sensible like circles that 's what the default data points are little circles whenever you paste new data points from another svg graph into a new graph , and you want the new points to be visibly different from the preexisting points for example , maybe you want one set of points to be little red dots and the other points to show as tiny black triangles , you need to go into the defs element at the top of the file and create a graphic primitive for the new data point shape you want and then give it a distinct id value that you can use in xlink references later on let me show you how that 's done the above graph uses green triangles for points derived from plant data original , i know , red dots for insect data , and peach colored squares for the bacterial data points here are the primitives i came up with for the data points ! triangles path d m l l z id triangles transform scale style fill cc stroke stroke linecap butt stroke width ! squares path d m l l l z id squares transform scale style fill cfaf stroke stroke linecap butt stroke width ! circles path d m c c c c c c c c z id circles transform scale style fill ee stroke stroke linecap butt stroke width the syntax is way easier than it looks example to make a triangle , i use a path element containing the seemingly peculiar drawing commands m l l z commands m and l mean moveto and lineto , while z means close off the shape by stroking a line from the present position to the start position and also fill the shape thus , m means move to the origin , that 's the lower left corner of the triangle l means stroke a line to x and y , the right corner of the triangle l of course means draw a line to x , y , the apex of an equilateral unit triangle has an x value of , obviously the y value of the apex is the sine of degrees , namely , only in this case we have to make it a negative number , why ? because in svg , the y axis starts at zero and gets increasingly positive as you go down the image , not up this is probably the single biggest source of confusion in svg to move a point higher decrease its y value do n't worry , you 'll get used to it for some weird reason , zunzun 's software spits out a huge mass of curveto commands in order to draw a circle , instead of using svg 's built in circle primitive go figure now that you know how to draw polygons in svg , you might want to try drawing a few try creating an x or a cross with lineto commands but do n't use z at the end , unless you want the shape filled in addition to stroked suppose you want to add a legend to your graph , as i 've done in the upper right corner of the above graph here 's the markup for it ! legend g transform translate use style fill fefeff stroke stroke linecap butt stroke width x xlink href circles y text x y font family courier font size arthropods text use style fill aaa stroke stroke linecap butt stroke width x y xlink href squares text x y font family courier font size prokaryotes text use transform scale style fill fefeff stroke stroke linecap butt stroke width x y xlink href triangles text x y font family courier font size plants text g notice carefully that the whole thing is wrapped in a g element , which is a convenience element for marking off arbitrary blocks of content , equivalent to div in html that is to say , by itself g draws nothing why use it , then ? well , look at what i did i placed a transform attribute inside it , in order to move translate everything contained in the g block , as a unit being able to position multiple items at once this way is tremendously convenient are you starting to feel the power of svg yet ? as you can see , i use the xlink mechanism to back reference the data point primitives triangles , squares , circles i also use text elements to place plain old text labels i hope i 've been able to give you some idea of the power and flexibility of svg with the examples shown here svg is an extremely sophisticated and capable medium , particularly if you start using javascript to modify dom elements dynamically it can do quite a bit more than i 've shown here in fact there 's really no limit to what you can do with svg the limit is your imagination if you do n't believe it , check out tomorrow 's blog