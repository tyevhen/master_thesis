today i want to show you how you can do a slick bio hacking experiment , and graph the results nicely , all in your browser , in well under minutes the following experiment will run just fine in chrome or firefox in firefox , it helps to have the firebug extension if you 're using firefox , click f if it pops a console window , you already have firebug i tested against chrome v and firefox with firebug other combinations may work those are just the ones i tested we 're going to do a comparative genomics proteomics experiment designed to explore amino acid usage in a particular protein dnaj across a couple dozen bacterial species even if you 're not a bio geek , i hope you 'll follow along at the very least , you 'll learn how to make pretty graphs from any kind of data using the server at zunzun what is the dnaj protein , you ask ? it 's one of a class of proteins known as heat shock proteins , which are produced in response to elevated temperatures your body produces heat shock proteins in response to fever , for example as you probably know or can guess , proteins , in general , are rather sensitive to heat even a small amount of heat can cause a protein to start to unravel or denature dnaj and its partners have the job of helping proteins re fold into their correct original d shapes after exposure to heat they 're like little repair jigs a partially damaged protein goes in it re folds and comes back out good as new heat shock proteins occur widely , across all domains of life , and their amino acid sequences are highly conserved but they do differ as we 'll see right now step go to http www uniprot org and enter dnaj case does n't matter in the search field at the top of the page , then hit enter a list of organisms with dnaj will appear , each with a checkbox on the left check all the checkboxes on the page gang check them with shift click step you 'll notice at the bottom of the window there 's a green bar with buttons retrieve , align , blast , and clear click the retrieve button steps and step in the page that comes up , look for fasta on the left under it are two links , download and open click open see screen shot below you 'll see a bunch of protein sequences with one letter abbreviations for amino acids , each preceded by a line that begins with greater than sign these are our dnaj proteins step step click f to toggle open the console window be sure the console tab is showing in firebug , you may also have to click the console menu and choose command editor from the dropdown list enter and execute with enter , in chrome , or with control enter in firebug the following lines of code all document getelementsbytagname pre innerhtml split gt all shift it 's important that the part between slashes be ampersand g t semicolon , not a greater than symbol the browser is showing you greater than signs but in the html markup it 's really ampersand g t semicolon , not angle brackets we actually do want to split on gt , not on note that to execute a line of code in firebug you have to type control enter in chrome , you just type enter but in chrome 's javascript console , you have to use shift enter to type on more than one line the variable all now contains an array of protein sequences if you want to verify it , type all length then enter , or in firebug control enter , and you should see the length of the array , step enter the following code in the console and execute it with enter it 'll do nothing , which is fine function analyze item var sequence item split sv d n ? w var lysinecount sequence match k g length var argininecount sequence match r g length lysinecount sequence length argininecount sequence length console log lysinecount argininecount this is the callback code we 'll use to process every member of the all array each item in the array consists of a fasta header followed by a protein sequence we just want the sequence , not the header , which is why we have a first line that splits off the part we need the remaining lines obtain the number of lysines k and the number of arginines r in the protein sequence , then we divide those numbers by the sequence length to get a frequency of occurrence the final line prints the results to the console window this function , by itself , does n't do anything until we run it against each amino acid sequence in the all array that 's the next step step enter the following line of code into the console and run it with enter or control enter , in firebug all foreach analyze the console should immediately fill with numbers rows of two numbers each that 's our data we need to graph it to see what it looks like ready ? step go now to http zunzun com and notice four pulldown menus at the top of the page use the far left dropdown to select polynomial select polynomial from the zunzun function list a new window appears with ugly or beautiful , depending on your mindset formulas click the link to first order linear d why ? because in the absence of any foreknowledge , we 're going to blindly assume that our data is best fit by a straight line if it 's not straight line data , we can come back and change our selection later when you click the first order linear d link , you 'll quickly be in a stark looking window with a single pulldown menu at the top click it and select data labels for graphs replace x data with lysine and y data with arginine select data labels for graph step now use the single pulldown menu to select text data editor quickly go back to that console window and copy all of your data all rows of numbers , then paste the data into the text data editor box click the submit button near the top of the page be patient , as it may take up to seconds or so for your graph to be ready you 'll know your graph is ready when the window changes to one that shows four pulldown menus at the top the far right menu is data graphs click into it and select arginine vs lysine with model note the exact names of the menu items will depend on how you labeled your axes at the end of step above you should see the window change to a view of a graph that looks like this graph created on demand by the zunzun server pretty easy , right ? it gets better the line that zunzun drew through the data points is a regression curve that minimizes the sum of squared error to see the formula for the line , including coefficients , use the far left menu , called coefficients and text reports , to select coefficients do n't worry , your graph will still be there when you 're done to get back to the graph at any time , just use the far right menu and any of the commands under it which re display the graph in various ways the graph seems to be saying that arginine levels go down as lysine goes up but how good of a correlation is this , really ? use the far left pulldown menu again this time select coefficient and fit statistics you 'll notice a ton of stats chi squared and so on among them , r squared is given as that means the correlation coefficient , r , is , which is pretty solid i 'll save the interpretation of our experiment 's results for another time for now , notice that underneath your zunzun graph are links for saving the graph either as png or svg i strongly recommend you save it as both you can open svg in both photoshop and illustrator and most browsers too you will definitely want to keep an svg version around to edit by hand in your favorite text editor svg is just a variety of xml i 'll be showing you how to do lots of sexy things with svg graphs in upcoming posts