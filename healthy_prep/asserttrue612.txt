praise ye mighty gods mt olympus fact possible ajax acrobat good news rest news shall say entirely salutary certainly well documented pretty interesting nonetheless certainly good news ajax acrobat adobe whatever reason chosen follow well accepted idiom web world allowing ajax code run context web document words ca put ajax code pdf field script form say serve pdf expect phone home server user interacting pdf document instead adobe requires put ajax calls folder level script say static file lives hard drive special subpath acrobat install path roughly equivalent firefox requiring ajax done context greasemonkey script say context jetpack hardly convenient magic comes method called net request part acrobat javascript api find documented page javascript acrobat api reference april edition due security restrictions supposedly method used pdf forms document context even js console must specifically used folder script look local acrobat install hierarchy find folder acrobat called javascripts need create ordinary text file put code inside save file js extension javascripts folder acrobat load file execute contents program launch time paying attention notice right away means developing ajax scripts acrobat potentially rather tedious restart acrobat every time want test change script something else going notice actually get around testing scripts acrobat pukes gives security error explicitly tell acrobat trust particular document open running script makes relatively little sense me folder script running outside document context i document open i designate doc trusted say aviation whiskey tango foxtrot whatever jumping hoops easy enough practice specify doc trusted go edit menu choose preferences hit control k dialog appears choose security enhanced list left click add file button navigate document question run ajax code folder level script wait run script user gesture triggering folder script answer need include code script puts new custom menu command file menu user select command run script without head scratching let me show code works ajax functioncurl var params cverb get curl curl ohandler response functionmsg uri var stream msg var string string soap stringfromstream stream app alert string net requestparams app addmenuitem cname ajax cparent file cexec 'ajax localhost mypage cenable event rc event target null npos read code bottom app addmenuitem call bottom adds new menu command ajax acrobat file menu command fires executes code cexec ignore code cenable simply tests document open ajax menu command dim open pdf doc going let take note fact magical net request method needs one parameter parameter block object parameter block turn needs bare minimum curl property containing url string pointing server resource trying hit cverb property containing one 'get 'post 'put 'delete 'options 'head one allowed webdav verbs 'mkcalendar optionally request block also property called ohandler response method called asynchronously course server ready respond basic notion craft param block hand net request method let params ohandler response get callback far good inside response well response called called four arguments first response body stream object minute second request url used get response third exception object fourth array response headers sparsely documented adobe javascript acrobat api reference well documented adobe heck need order read stream object i spare suspense turns stream object string containing hex encoded response data easiest way decode call soap stringfromstream stream illustrated lots ajax acrobat i yet touched authentication example webdav even post instead get basics end something interesting acrojax sure add comment want know acrobat ajax apache sling repository watch blog space dev day i writing soon