lena standard test image graphics programming world transformed perlin gain function respectively left right coaxing contrast image kind exercise weak signal detection trying make information obvious presence noise practice comes making light tones lighter dark ones darker carefully way force many preferably dark tones total blackness many light tones total whiteness useful approach adapt ken perlin gain function remapping pixel values javascript function looks like var log pointfive function gain var p math log log pointfive return return return math pow p return math pow p perlin gain function maps unit interval i real numbers inclusive onto way control value maps unchanged whereas control parameter value say maps number maps values unit interval new values shown figures graph axes go zero function shown control parameter formal parameter throttles function input value mapped different output output function always matter value pass say function return whereas output one case got bigger case got smaller function effect making bigger values bigger smaller values smaller effect making bigger values smaller smaller values bigger gain gain gain turns great function changing contrast image map pixel values onto interval using function value something greater want image contrast less want image less contrast turns java image built class called lookupop implements lookup operation source color table output color makes easy implement extremely high performance contrast adjustment via gain function red green blue values rgb image span interval zero need create byte array length containing values modify table passing value gain function altered table used create lookupop instance need call filter instance passing input image output holder image i javascript code listing run script image choice simply need open source imagemunger app i wrote couple days ago contrast js kas thomas jan public domain asserttrue blogspot use values less contrast contrast adjust taste awtimage java image return java image bytelookuptable function getlut amt var log pointfive function gain var p math log log pointfive return return return math pow p return math pow p perlin gain function per k perlin image synthesizer computer graphics v p going construct table values wherein values vary nonlinearly according formula gain throttled parameter 'amt var tablesize var javaarray java lang reflect array var bytes javaarray newinstance java lang byte type tablesize var lut new awtimage bytelookuptable bytes var i gainvalue i tablesize i gainvalue gaini amt var bytevalue gainvalue bytevalue bytevalue bytevalue bytes i bytevalue return lut create lookup table lut getlut contrast create java image lookupop lop new awtimage lookupop lut null clone source image src theimage clone new awtimage bufferedimage src getwidth src getheight src gettype gd clone getgraphics gd drawimage src null apply contrast lop filter clone src refresh screen panel updatepanel thepanel repaint couple things note first ca assume array created javascript used array java context java type fussy javascript instead create java array javascript var bytes javaarray newinstance java lang byte type tablesize creates java byte array stores reference javascript another problem ca map values onto length java byte array java byte type accommodate values greater words byte signed bit type get error try store value byte variable initialize length byte array values zero xff still keep java compiler happy resort bit twos complement legerdemain bytevalue bytevalue bytevalue test contrast js script i ran lena image values gain function leaves image unchanged reduces contrast increases contrast see results top post code executes quickly table lookup done java javascript part simply initializes small table projects future add ui program allow contrast adjusted real time slider contrast increased color image hot parts image appear get hotter cold parts appear get colder write modification contrast code compensates apparent temperature changes code currently written inaccuracies due rounding errors ignored rewrite routine transform image bit color space use k color lookup table rather byte table contrast adjustment transform image back original color space afterwards