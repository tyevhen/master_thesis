screenshot shader ui showing basic turbulence looks like update earlier post procedural texturing canvas i wanted post improved faster version earlier code also incorporates turbulence function probably properly called fractal noise first hat ryan sturgell pointing moving big array initialization outside noise function call possible speed perlin noise function several fold obvious i missed first go round doh case noise function improved code process k pixels per second significant improvement indeed turbulence turbulence function adds perlin noise various frequencies together like function turbulence z octaves var var f var var i i octaves i f perlinnoise noisex f f z f f return rescale back net result giving noise much realistic things like cloud textures smoke example size biasy turbulencesize size math sqrty r biasy r code uses turbulence generate cloud pattern bias stretch sky bit top stretch red value vertically well without ado complete code shader page copy paste following code text file give name ends open chrome firefox capable browser head script canvas demo kas thomas asserttrue blogspot use risk context null canvas null window onload function canvas document getelementbyid mycanvas canvas addeventlistener'mousemove handlemousemove false context canvas getcontext loadhiddentext function loadhiddentext var options document getelementsbytagname option var spans document getelementsbytagname span var i i options length i options i value spans i innerhtml probably called resetcanvas function clearimage canvas width canvas width function drawviacallback var canvas width var canvas height var canvasdata context getimagedata var idx var index pixel array idx rgb values var r canvasdata data idx var canvasdata data idx var canvasdata data idx var pixel callback r canvasdata data idx pixel canvasdata data idx pixel canvasdata data idx pixel context putimagedata canvasdata function fillcanvas color context fillstyle color context fillrect canvas width canvas height function dopixelloop var code document getelementbyid code value var f callback function pixel var r pixel var pixel var pixel code return r try evalf fillcanvas ffffff drawviacallback catche alert error tostring function handlemousemove ev var get mouse position relative canvas element ev layerx ev layerx firefox ev layerx ev layery else ev offsetx ev offsetx opera ev offsetx ev offsety document getelementbyid mycanvas title port ken perlin java code perlinnoise new function var p new array var permutation var i i i p i p i permutation i noise functionx z var math floorx find unit cube math floory contains point z math floorz math floorx find relative z math floory point cube z math floorz var fadex compute fade curves v fadey z fadez var p aa p z ab p z hash coordinates p ba p z bb p z cube corners return scalelerpw lerpv lerpu gradp aa z add gradp ba z blended lerpu gradp ab z results gradp bb z lerpv lerpu gradp aa z corners gradp ba z cube lerpu gradp ab z gradp bb z function fadet return function lerp return function gradhash z var hash convert lo bits hash code var gradient directions v z return v v function scalen return function turbulence z octaves var var f var var i i octaves i f perlinnoise noisex f f z f f return rescale back perlin bias function function bias return math powa math logb math log script head body canvas id mycanvas width height canvas br input type button value erase onclick clearimage select onchange document getelementbyid'code innerhtml value option choose something click execute option option basic perlin noise option option basic turbulence option option waterfall option option spherical nebula option option green fibre bundle option option orange blue marble option option blood maze option option yellow lightning option option downward rainbow wipe option option noisy rainbow option option burning cross option option fair skies option select br textarea id code type textarea cols rows enter code globals r perlinnoise noisea textarea br input type button value execute onclick dopixelloop input type button value open png onclick window opencanvas todataurl'image png begin hidden text div hidden true span enter code span span size perlinnoise noisesize size r span span size turbulencesize size r span span perlinnoise noisex math round r span span centerx centery dx centerx dy centery dist dx dx dy dy perlinnoise noisex r dist math round r span span sizex sizey perlinnoise noisesizex sizey math sin math sinn r span span centerx centery dx centerx dy centery dist math sqrtdx dx dy dy perlinnoise noisex dterm dist math round r dist dterm dist r dist dterm span span perlinnoise noisex math cos r math roundn r r span span sizex sizey perlinnoise noisesizex sizey math cosn math pi math sqrtx r span span uses perlin noise math sin math cos r math sin span span size perlinnoise noisesize size math sinn math cosn r math sinn span span size perlinnoise noisesize size math cosn math pi math cos math pi math sqrtx math sqrty r r r span span size biasy turbulencesize size math sqrty r biasy r r span div end hidden text body incidentally i find halfway decent discussion noise turbulence online written ken perlin developer nvidia gpugems gpugems ch read reap