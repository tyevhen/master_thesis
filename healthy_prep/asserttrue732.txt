i mentioned previous post i interviewed job well known search company one five people interviewed me asked question resulted hour long discussion explain would develop frequency sorted list ten thousand used words english language i sure anyone would ask kind question course interview technical writing job software design kind question led lively discussion i still think one best technical interview questions i ever heard ask would answer question initial response assail assumptions underlying problem language fluid thing i argued changes real time vocabulary usage patterns shift day day develop list words frequencies means taking snapshot moving target whatever snapshot take today going look like snapshot take tomorrow even five minutes first question get sample words spoken english written english two different vocabularies two different frequency patterns mutable dynamic fluid protean changing minute minute day day suppose limit problem written english obtain representative sampling english prose obvious thing average corpus think interviewer wanted cut debate short move algorithms program design i resisted pointing problem definition extremely important ca rush solving problem understand pose let assume inquisitor said web good starting place english web pages i tormented tormentor pointing dangerous assume spiders crawl pages desirable random fashion anyway experts believe deep web content content either uncrawlable never crawled constitutes majority online content likely obtain kind representative sample english words even thing representative sample english language i firmly maintain interviewer clearly growing impatient petulence asked me talk designing program would obtain sorted list used words i dutifully regurgitated standard crawl canonicalize parse tally sorts things typically program would organize words memory tormentor demanded know big hash table i said hash right table bump counter spot much memory need got i smiled seriously much said i said assuming bit hardware software maybe something like gigs enough memory billion slot array bytes data per slot words fit space short suffice counter slot longer words hashed separate smaller array meanwhile using bits available using address space enough hash words length less collisions typical english word entropy bits per character longer words entail risk hash collision good hash function much problem kind hash function would use interviewer asked i try simple linear congruential generator speed i said see performs terms collisions asked me draw hash function whiteboard i scribbled pseudocode looked something like hash initial value char word hash magic number hash char hash bounds return hash i explained hash table array length prime bounds number less table length coprime table length good possible values magic number might small primes test various values find one works well event hash collisions professor asked know i said look english language million words hashing million words table hold four billion load factor table negligible getting collisions means need better hash algorithm plenty choose ought run experiment see even get hash collisions assume get handle well i said handle collisions via linked lists resize rehash table use cuckoo hash algorithm done led whole discussion cuckoo hashing algorithm amazingly inquisitor supposedly skilled art never heard went quite eventually discussed harvest frequencies create desired sorted list end i returned main point sample noise sample error inevitably going moot results time run program going get different result fresh web crawl time word frequencies imprecise lower frequency noise run program september might find word terrorist ranks frequency web run september might find ranks extreme example vocabulary noise pervasive though level words rank say frequency list day day variance word rank given word going substantial even meaningful talk precision face much noise anyway whether agree analysis see question like lead great deal discussion course job interview cutting across potentially large number subject domains question leads naturally questions best kind question ask interview