update mar sadly appears zunzun gone away bad greatest graphic site ever able create high quality graphs data free zunzun great me really makes zunzun great service fact give graph svg format svg super powerful super flexible markup xml means need illustrator photoshop order customize need wordpad notepad old text editor believe me pretty fantastic things svg nothing wordpad editing tool previous post i showed three graphs amino acid content hsp heat shock proteins three diverse groups organisms graphs svg i combine single graph easily wordpad need haul photoshop illustrator i note following inline svg image visible ie try web standards compliant browser stroke linecap square stroke linejoin round arthropods prokaryotes plants obviously combine two graphs certain axis scales identical graphs zunzun let constrain axis bounds two zunzun graphs svg format need copy data points one graph paste using wordpad points big long list use elements containing mysterious notation xlink href latter back reference xlink reference previously defined graphic element id attribute value find element question defs block near beginning file find reference global search replace replacing something sensible like circles default data points little circles whenever paste new data points another svg graph new graph want new points visibly different preexisting points example maybe want one set points little red dots points show tiny black triangles need go defs element top file create graphic primitive new data point shape want give distinct id value use xlink references later let me show done graph uses green triangles points derived plant data original i know red dots insect data peach colored squares bacterial data points primitives i came data points triangles path l l z id triangles transform scale style fill stroke stroke linecap butt stroke width squares path l l l z id squares transform scale style fill cfaf stroke stroke linecap butt stroke width circles path z id circles transform scale style fill ee stroke stroke linecap butt stroke width syntax way easier looks example make triangle i use path element containing seemingly peculiar drawing commands l l z commands l mean moveto lineto z means close shape stroking line present position start position also fill shape thus means move origin lower left corner triangle l means stroke line right corner triangle l course means draw line apex equilateral unit triangle value obviously value apex sine degrees namely case make negative number svg axis starts zero gets increasingly positive go image probably single biggest source confusion svg move point higher decrease value worry get used weird reason zunzun software spits huge mass curveto commands order draw circle instead using svg built circle primitive go figure know draw polygons svg might want try drawing try creating cross lineto commands use z end unless want shape filled addition stroked suppose want add legend graph i done upper right corner graph markup legend transform translate use style fill fefeff stroke stroke linecap butt stroke width xlink href circles text font family courier font size arthropods text use style fill aaa stroke stroke linecap butt stroke width xlink href squares text font family courier font size prokaryotes text use transform scale style fill fefeff stroke stroke linecap butt stroke width xlink href triangles text font family courier font size plants text notice carefully whole thing wrapped element convenience element marking arbitrary blocks content equivalent div say draws nothing use well look i i placed transform attribute inside order move translate everything contained block unit able position multiple items way tremendously convenient starting feel power svg yet see i use xlink mechanism back reference data point primitives triangles squares circles i also use text elements place plain old text labels i hope i able give idea power flexibility svg examples shown svg extremely sophisticated capable medium particularly start using javascript modify dom elements dynamically quite bit i shown fact really limit svg limit imagination believe check tomorrow blog