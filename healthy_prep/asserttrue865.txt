interesting post websphere community blog andrew spyker explains switch bit java bit runtime environment typically see speed go percent memory consumption go around percent latter explained fact addresses simply bigger bit land complex data structures use lot bit values even need bit values reason performance drops although address width gotten bigger processor memory caches got bigger terms overall kbytes available thus bound see things drop l l cache often hence cache misses go speed goes would anyone invest bit machines bit jvm going give immediate performance hit answer simple main reason go bit architecture address larger memory space flow bytes data bus word running heap intensive apps lot gain going bit app needs around gb ram choice gb might actually less gb win machine os hogs gb ram let applications gb jvm course needs ram heap space within jvm app uses turns jvm heap contiguous reasons related garbage collection largest piece contiguous heap get jvm loads taking account garbage run background order make windows work gb gb roughly depending circumstances get heap means either moving bit jvm using terracotta latter heard shared memory jvm clustering technology essentially gives unlimited heap space i say heap space limited amount disk space terracotta pages disk necessary good explanation works given getting back bit memory consumption issue issue ram requirements ordinary java apps increasing dramatically run bit machine huge problem potentially hosting services run many instances java apps saas customers means scale costs rise much faster turns things ibm jvm uses clever pointer compression scheme essence make good use unused high order bits bit machine result performance within percent bit ram growth percent graphs oracle similar trick bea jrockit jvm sun testing new feature called compressed oops ordinary object pointers latter supposedly included special jdk performance release survey required use special command line options get new features work however anyway know bit java slow piggish everything fatter bit land information large memory support windows see article support microsoft also consult post sinewalker