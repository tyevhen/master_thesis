i slowly surely coming grips cmis content management interoperability services soon lingua franca crud content management world maybe worlds well reading cmis draft docs watching couple emc cmis videos youtube i starting grok basic abstractions first impressions i offer impressions constructive criticism btw pot shots i want see cmis succeed also means i want see done right v draft doc domain model says four top level first class root object types document folder relationship policy support policy type optional basically three root types already i question whether perhaps top level object type cmisobject everything inherits rather four root objects since presumably four basic object types share least characteristics common maybe page part i doc says administration scope cmis later learn policy object represents administrative policy enforced repository also find applypolicy removepolicy operations clearly administrative intent remarkably policy objects manipulated standard cmis crud operations content stream versionable however may fileable queryable controllable treating object file fileable allowing versionable pretending content stream saying may much fuzziness seems me right way cmis part i worded policy anything one might well call rules aspects otherstuff word policy specific connotation though i come implies things like compliance governance things may intersect role constraints separation duties rbac possibly lot yes concepts come content management context workflow seems me policy conventional definition rather far afield cmis concentrating right policy means something else let good definition let hear argument exposed client apps i say drop policy object type entirely baggage keep spec light i like idea relationships top level object type notion specify designation source object target object related way two objects need know i like feels suitably abstract models construct used sorts ways content management systems today folder object type otoh concrete tastes need stop thinking terms folder playful non geek term directory designed make file systems understandable people know manila folders think abstractly notions really trying encapsulate object type currently dubbed folder first blush would seem though navigability navigational axes constitutes core notion possible graphs allowed folder match popular navigational notions inherent file system folders least windows words many many parent child mappings allowed cmis folders destroy conventional folder metaphor unless computer science geek case think terms folders anyway i think folder try encapsulate collection relationships navigation hierarchy whether treelike one possible subclass collection cheat trying emulate outset parochial notion folders based particular type graph need folder general collection relationships already relationships take opportunity reuse i like see discussion folders i fear rush get cmis blessed oasis may already precluded discussion important issue i hope i wrong interesting stuff though cmis wow i still lot grokking