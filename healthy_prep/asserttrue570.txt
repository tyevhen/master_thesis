convolution straightforward mathematical process fundamental many image processing effects played around filter custom dialog photoshop already familiar convolutions sharpening convolution applied lena convolution applies matrix often called kernel pixel image given pixel image new pixel value calculated multiplying various values kernel corresponding underlying pixel values summing result rescaling applicable pixel bandwidth usually imagine kernel values equal one applying convolution multiplying center pixel eight nearest neighbors one adding dividing rescale pixel words tantamount averaging pixel values essentially blurs image slightly every pixel turn application convolutions canvas image straightforward i created example chrome extension active whenever visit url ending jpg png website extension provides convolution kernel text fields enter values want positive negative kernel columns rows behind scenes kernel normalized automatically simply means value divided sum values except case values sum zero instance normalization step skipped convolutions sobel kernel kernel values add zero case end mostly dark image probably want invert chrome extension provides invert image button occasion modified sobel kernel plus image inversion ui also includes reset button reloads original image sets kernel identity kernel button opens newly modified image new window png saved disk code chrome extension shown use copy paste code new file call kernel user js whatever want sure name ends user js save file text convenient folder launch chrome use control bring file open dialog navigate file saved open notice bottom chrome window status warning saying extensions harm health etc two buttons continue discard click continue confirm installation dialog pops click install button extension installed running test navigating convenient url ends jpg png note extension may fail due security restrictions loading images disk via file scheme best results navigate image web using name kerneltool namespace ktkerneltool description canvas image kernel tool include userscript demo script kas thomas use risk stuff loadcode injected script element page function loadcode window kernel size square kernel window transformimage function var canvasdata context getimagedatax var kernel getkernelvalues normalizekernel kernel var var get real estate around pixel using offscreen image var area context getimagedatax kernel size kernel size index current pixel array var idx apply kernel current index var rgb applykernel kernel area canvasdata idx canvasdata data idx rgb canvasdata data idx rgb canvasdata data idx rgb inner function applies kernel function applykernel k localdata imagedata pixelindex var sumr var sumg var sumb var var i i k length i sumr localdata data k i sumg localdata data k i sumb localdata data k i sumr sumr sumg sumg sumb sumb return math round sumr math round sumg math round sumb context putimagedata canvasdata window invertimage function var canvas width var canvas height var canvasdata context getimagedata var i i i canvasdata data i canvasdata data i canvasdata data i canvasdata data i canvasdata data i canvasdata data i context putimagedata canvasdata get offscreen drawing context image window getoffscreencontext function var offscreencanvas document createelement canvas offscreencanvas width offscreencanvas height return offscreencanvas getcontext window getkernelvalues function var kernel document getelementsbyclassname kernel var kernelvalues new array var i i kernelvalues length i kernelvalues i kernel i value return kernelvalues window setkernelvalues function values var kernel document getelementsbyclassname kernel var i i kernel length i kernel i value values i window normalizekernel function k var sum var i i k length i sum k i sum var i i k length i k i sum window setupglobals function window canvas document getelementbyid mycanvas window context canvas getcontext var imagedata context getimagedata canvas width canvas height window offscreencontext getoffscreencontext canvas width canvas height window offscreencontext putimagedata imagedata setupglobals actually call enable buttons code loaded document getelementbyid reset disabled false document getelementbyid invert disabled false document getelementbyid png disabled false end loadcode main function main really image url var ext location href split pop ext match jpg jpeg png null return ditch original image img document getelementsbytagname img img parentnode removechildimg put scripts page scope script elem id mycode eval event later var code document createelement script code setattribute id mycode document body appendchildcode code innerhtml loadcode tostring set canvas canvas document createelement canvas canvas setattribute id mycanvas document body appendchild canvas context canvas getcontext image new image image onload function canvas width image width canvas height image height context drawimageimage canvas width canvas height line must come onload image src location href createkernelui createapplybutton createresetbutton createinvertimagebutton createpngbutton create ui save png function createpngbutton var button document createelement input button setattribute type button button setattribute value open png button setattribute id png button setattribute disabled true button setattribute onclick window opencanvas todataurl'image png document body appendchild button function createinvertimagebutton var button document createelement input button setattribute type button button setattribute value invert image button setattribute id invert button setattribute disabled true button setattribute onclick invertimage document body appendchild button function createresetbutton var button document createelement input button setattribute type button button setattribute value reset button setattribute id reset button setattribute disabled true button setattribute onclick var data offscreencontext getimagedata canvas width canvas height context putimagedatadata setkernelvalues document body appendchild button load code loaded yet function createapplybutton var button document createelement input button setattribute type button button setattribute value apply button setattribute onclick typeof codeloaded 'undefined codeloaded code document getelementbyid mycode innerhtml evalcode loadcode transformimage canvas width canvas height document body appendchild button function createkernelui var kdiv document createelement div var elem new array var i i i elem i document createelement input elem i setattribute type text elem i setattribute value elem i setattribute class kernel elem i setattribute style width px elem i setattribute id k i var i i i kdiv appendchild elem i i i i kdiv innerhtml br document body appendchild kdiv fun educational experiment new kernel values apply one convolution sequentially achieve new effects right choice values easily achieve blurring sharpening embossing edge detection enhancement among effects incidentally information lena test image case familiar interesting backstory check en wikipedia org wiki lenna