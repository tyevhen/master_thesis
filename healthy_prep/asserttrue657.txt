java advanced imaging api supports number interesting convolutions straight box one sobel edge detection sobel edge detection kernel comes two varieties corresponding horizontal edge detection vertical edge detection combine run serially image detect edges image following code example javascript run following script image choice using imagemunger app i wrote days ago sure java advanced imaging jars classpath sobel js kas thomas january public domain edge detection routine using java advanced imaging requires java advanced imaging library java sun products java media jai current run file using imagemunger asserttrue blogspot simple java class running scripts jai packages javax media jai sobelh jai kerneljai gradient mask sobel horizontal sobelv jai kerneljai gradient mask sobel vertical pb new packages java image renderable parameterblock imagemunger puts image global scope pb addsource image pb add sobelh pb add sobelv renderedop jai jai create gradientmagnitude pb var image renderedop getrendering getasbufferedimage panel setimage invertimage image take bufferedimage arg flip bits pixels function invertimage image var image getwidth var image getheight var pixels image getrgb null var i i pixels length i pixels i pixels i flip pixel bits image setrgb pixels return image run sobel operation get negative image like want inverted version image see example need invert individual pixels image super fast way lookup table also pixel inversion manually loop i done illustrative purposes javascript pixel inversion loop adds one second processing time image sobel filter takes around half second sobel tends sensitive noise feature enhance specks jpeg artifacts often helps smooth image first blurring operation prior applying sobel future projects write tunable version sobel detect soft hard edges according tuning parameter write version sobel tunable color viz detecting blue edges black edges medium grey edges