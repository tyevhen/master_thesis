time early programming career i needed rewrite particular program small one make run faster i quite new programming thought way get something run faster rewrite assembly days could unroll loop assembly pretty much count getting worthwhile speedup tight loop begin fortunately i fabulous mentor days coder wisdom experience far beyond years person question first class code ninja master circuit designer genius woz like proportions silicon obeyed way marble obeyed michelangelo came code john could astounding things could optimize optimize virtually algorithm situation little code sit studying printout wondering heck algorithm went i remember john peculiar way making loops vanish example turn table lookups recursion self modifying code combination three one day mentor asked me i working i told i mentioned i frantically searching way speed little program i described things i tried far listened intently i done talking john gave me profound advice programming expert ever given me profound me time maybe stupid sounding cpu said runs certain speed execute fixed number instructions per second finite limit many instructions per second execute right right i said way really make code go faster way make instructions execute faster thing making machine less paused emphasis go fast said slowly less go fast less less go fast yes course makes perfect sense way make program run faster except make less i say program i talking complex orchestrated web apps anything fancy dependencies standalone executables main loop key takeaway think terms making slow piece code run faster instead think terms making less many cases less means using different algorithm may simple inserting elses check trivial frequently encountered special cases return early entering fully generalized loop may mean canonicalizing data way passing main routine main routine include code checks corner cases tricks endless end cpu less key go fast less mantra valuable one me paying many ways many situations years helped me understand performance issues different kind way i grateful exposed concept early career i provide use use see fit maybe received similarly influential piece advice early career please leave comment i love hear