listening excellent presentation hans boehm finalization threads java technology based memory model i come conclusion finalization one java worst features worst clear i talking final keyword actually great feature language rather i talking notion finalizers special cleanup methods jvm call object finally reclaimed garbage collector idea object holding onto system resource file descriptor free resource finalize method right longer used object gets garbage collected problem guarantee quickly order finalizers called also guarantee called sun tony printezis gives good explanation finalization article sun developer network site brilliant article i found myself quite nauseated time i got end finalization wrong wrong jvm guarantee order call finalizers objects finalization queue printezis points finalizers classes application libraries treated equally object holding lot memory scarce native resource get stuck finalization queue behind objects whose finalizers making slow progress oh great i need finalizers blocking finalizers heap fragments turns instantiation time object contains finalizer marked treated differently jvm extra overhead incurs performance hit application creates many short lived objects finalizers hit quite substantial hans boehm see link testing found slowdown test app objects finalizers compared finalizers really fast jvm namely jrockit slowdown eleven fold funny thing articles book chapters i read finalization i never even seen good real world example situation requiring use finalizer supposedly use finalizer holding onto system resource need free object goes scope reality almost always case system resources considered scarce precious dispose close similar method explicit purpose freeing resource use resource normal release mechanism need finalizer fact finalizer lets hold onto resource longer someone argue always know object going scope therefore put call release method finalizer assured resource eventually released okay sigh fine dandy long count finalize method called ca long machine starve file descriptors sockets whatever precious resource happens finalizer finally called remember jvm makes guarantees finalization non deterministic i say though contorted non real world examples always trotted justify existence finalizer mechanism java always struck me little malodorous unmistakeable antipattern smell gets clothing makes feel like taking hot shower get home maybe confront possibility likelihood finalization evil even people write long articles end urging use good enough me