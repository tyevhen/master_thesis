last month oopsla interesting presentation michael bond technology called melt aims prevent memory errors java programs harbor memory leaks say percent large java programs intel funded research paper tolerating memory leaks bond thesis advisor kathryn mckinley texas austin well worth reading key intuition reachability approximation liveness thus identify objects dint infrequent use putative orphans move orphan objects disk stop trying garbage collect thereby freeing heap space relieving collector unnecessary work running program later tries access orphaned object bring back life done low level neither garbage collector running program knows anything special going melt staleness tracking logic read blockers actually become activated running application approaching memory exhaustion defined arbitrarily percent heap fullness rather letting program get really close memory exhaustion causes garbage collection become frequent program seems grind halt stale objects moved disk running app slow purists complain sweeping memory leaks carpet like substitute actually fixing leaks large programs however impractical find fix memory leaks i question whether even provably possible even could find fix potential leaks program jre never leak external libraries going go quest fix people leaks know found i believe fixing memory leaks i also pragmatist i think app mission critical ca hurt safety net melt safety net good work michael