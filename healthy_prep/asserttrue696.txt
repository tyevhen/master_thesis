i reading yesterday richard p gabriel classic worse better theory wraps lot related concepts less good enough good enough kiss yagni key intuition try perfect something adding less perfect gets try perfect leave imperfect better way worse better alas worse better goes entrenched philosophies like correctness efficiency completeness simplicity business level goes philosophy give customer every damn feature wants says let leave large number ultimately unimportant features concentrate making rest supposed prototype proof concept slam dunks desired functionality sucks code level classes cleanly factored example worse better chances poc later discarded reimplemented correctly team gof acolytes morph overfactored underperforming pig unexplainable memory leaks hard describe odor hey scale worse always better course better large better software world better tends take unexpected meanings