i continue think garbage collection lot career move context browser performance enterprise app scaleup realtime computing virtual machine design certainly affected terms browser behavior memory leakage ongoing concern firefox example mozilla team done lot great work stem leakage much work centers course improving garbage collection one thing makes browser memory leak troubleshooting thorny issue different browser subsystem modules particular issues example javascript engine issues windowing system issues makes situation even trickier third party extensions interact various ways browser monster plug ins acrobat reader flash shockwave java quicktime many simply leak memory blow without added help firefox lot written gc java java supposed much less leakage prone java flash bit mystery memory manager apparently rewritten flash player enhanced i know high level flash player gc java like nondeterministic mark sweep system exact algorithms though i know differ different kinds flex flash air shockwave runtime environments different operating systems i know i know couple quirky things one air application system gc method enabled content running air debug launcher adl content application security sandbox also java lot people wrongly believe calling system gc infallible way force garbage collection happen air system gc mark sweep given object call might think means simply call system gc twice row force collection causing mark sweep right fast two different kinds pointers vm runtime bytecode bowels vm kind create sweep bytecode ones details memory management differ air flash flex bit mystery me differ flex framework apparently makes different assumptions garbage lifecycles vis vis pure flash app use cases flex versus flash course quite different doubt influenced gc approach flash comes tradition short lived sprite based apps user looks briefly dismisses obviously use tactical approach gc specific case got app flex based long running constantly slamming animation frames video buffer need strategic approach gc i say i talking folks tasked designing adobe vm memory management logic application developer flex based dam cms client made enterprise customers wo necessarily benefit memory management system designed sprite animations sidebar ad every developer cares memleaks knows use anonymous functions inside event handlers callbacks name gc weak references used however weak references wo totally save day asynchronous objects register flash player run one objects timer loader file db transaction continues referenced player essentially unreachable also issue object memory versus rendering memory bulk memory used flash player goes toward rendering part least control stage flash grow mb fairly easily try destroy might reclaim mb i idea much attributed object entanglement versus deep vm mayhem gnarly issue overall i think gc regardless technology something benefits openness community involvement words area proprietary serves one code needs open source community needs involved figuring solutions deep memory management issues apps ca simply allowed detonate unpredictably apparent reason easily troubleshot reason web world enterprise bottom line solving memory management problems framework vm level critical future success something like air flex much important left adobe