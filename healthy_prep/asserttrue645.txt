interesting discussion recently wrong jetpack laurent jouanneau daniel glazman others see long comment thread end daniel recent post criticisms tend fall along two major axes mozilla jetpack claims kinder gentler easier learn replacement technology making firefox extensions replacing existing quirky hodgepodge xul xbl xhtml technologies abandons xul totally means extension programmers ca transfer current xul skills jetpack dev world important jetpack loses sophisticated layout model xul place plain old css jetpack api bound closely jquery api closure intensive syntax peculiar self obfuscating notation overreliance method overloading one jetpack goals democratize firefox extension programming liberating hands xul programming elite bringing ff extension programming purview mere mortals speak javascript stops short goal point fact jetpack encourages magic code closure ridden one liners expects fair amount clairvoyance programmers comes required imports notions example winning code entry recent jetpack coding competition unreadable i self obfuscating lines like let window mozilla org appshell window mediator getserviceci nsiwindowmediator getmostrecentwindow navigator browser api encourages kind code gets thumbs me frankly point i would probably agree daniel glazman says jetpack totally misses main goal making extension authoring dead simple instead recreating another programming elite wedding jquery one worst design choices jetpack api experts could made imho clever syntax advance api cause secret handshakes advance diplomacy cause criticisms things like overuse imports wrappedjsobject lack localization support lack ability use offline resources odd constructs like jetpack tabs focused raw except perhaps localization showstoppers syntax encourages brevity clarity coolness maintainability hand definitely problem seems me either going democratize firefox extension creation let get rid secret handshakes go back kiss design principle