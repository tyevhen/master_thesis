i know took me long realize easy fast way obtain average two rgb pixel values rgb pixel commonly represented bit integer let assume top bits used ensure proper averaging red green blue components two pixels requires parsing bit values pixel adding together dividing two crafting new pixel new red green blue values least naive way things code i show javascript looks much java horribly inefficient naive way function average var redmask xff var greenmask xff var bluemask xff var ared redmask var agreen greenmask var ablue bluemask var bred redmask var bgreen greenmask var bblue bluemask var avered ared bred var avegreen agreen bgreen var aveblue ablue bblue return avered avegreen aveblue lot code average two bit values remember red green blue values bits live swim lanes ca allow overflow much cleaner less obvious hugely faster way fast way maskbits xfefeff function ave maskbits maskbits return key intuition want clear bottom bit red green channels order make room overflow green blue adds course real world would inline code rather use function loop processing pixels surely want call function hundreds thousands times similar mask based techniques used adding subtracting pixel values overflow handled differently though left exercise reader